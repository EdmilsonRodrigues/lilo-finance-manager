name: Run Integration Tests

on:
  push:
    branches-ignore:
        - '*/*'
  pull_request:
    branches-ignore:
      - '*/*'

jobs:
    test-python-integration:
        name: Run Integration Tests on Python Module ${{ matrix.service }}
        runs-on: ubuntu-latest
        strategy:
          matrix:
            service:
              - common_utils/python/messagery
              - user_management
        steps:
        - uses: actions/checkout@v4

        - name: Set up Python 3.13
          uses: actions/setup-python@v5
          with:
            python-version: "3.13"

        - name: Get service base path
          id: service_path
          run: |
            echo "base_path=src/${{ matrix.service }}" >> $GITHUB_OUTPUT

        - name: Install the latest version of uv
          uses: astral-sh/setup-uv@v5
          with:
            version: latest
            enable-cache: true
            cache-suffix: "integration-${{ matrix.service }}"
            cache-dependency-glob: "${{ steps.service_path.outputs.base_path }}/uv.lock"

        - name: Sync dependencies
          run: |
            cd "${{ steps.service_path.outputs.base_path }}"
            uv sync --group test

        - name: Run Integration Tests
          run: |
            cd "${{ steps.service_path.outputs.base_path }}"
            source .venv/bin/activate
            make integration-test

    test-go-integration:
      name: Run Integration Tests on Go Module ${{ matrix.service }}
      runs-on: ubuntu-latest
      strategy:
        matrix:
          service:
            - common_utils/go/messaging
      steps:
      - uses: actions/checkout@v4

      - name: Get service base path
        id: service_path
        run: |
          echo "base_path=src/${{ matrix.service }}" >> $GITHUB_OUTPUT

      - name: Add Go Mod and Go Sum Paths to Outputs
        id: get_go_mod_path
        run: |
          echo "go_mod_path=${{ steps.service_path.outputs.base_path }}/go.mod" >> $GITHUB_OUTPUT
          if [ -f "${{ steps.service_path.outputs.go_mod_path }}/go.sum" ]; then go_sum_exists=true; fi
          echo "go_sum_exists=${go_sum_exists}" >> $GITHUB_OUTPUT

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "${{ steps.service_path.outputs.base_path }}/go.mod"
          check-latest: true

      - name: Run integration tests
        run: |
          cd "${{ steps.service_path.outputs.base_path }}"
          make integration-test
